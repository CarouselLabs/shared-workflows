name: Reusable Serverless Deployment

on:
  workflow_call:
    inputs:
      tenant:
        description: 'The tenant to deploy for'
        required: true
        type: string
      stage:
        description: 'The stage to deploy to (dev, prod)'
        required: true
        type: string
      service_name:
        description: 'The name of the service'
        required: true
        type: string
      aws-account-id:
        description: "The AWS Account ID for deployment"
        required: true
        type: string

jobs:
  deploy-serverless:
    name: Deploy ${{ inputs.service_name }} to ${{ inputs.stage }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Service Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get package manager
        id: package-manager
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=pnpm install --frozen-lockfile" >> $GITHUB_OUTPUT
          elif [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=yarn install --frozen-lockfile" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=npm ci" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies
        run: ${{ steps.package-manager.outputs.command }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-oidc-role-tenant-terraform
          aws-region: eu-west-1
          audience: sts.amazonaws.com

      - name: Set Domain Based on Stage
        id: set-domain
        run: |
          if [[ "${{ inputs.stage }}" == "prod" ]]; then
            echo "ROOT_DOMAIN=carousellabs.co" >> $GITHUB_ENV
          else
            echo "ROOT_DOMAIN=dev.carousellabs.co" >> $GITHUB_ENV
          fi

      - name: Install Serverless Framework
        run: npm install -g serverless

      - name: Deploy to AWS via Serverless
        run: serverless deploy --stage ${{ inputs.stage }} --tenant ${{ inputs.tenant }}
        env:
          AWS_REGION: eu-west-1
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }} 